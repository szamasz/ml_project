services:
  postgres:
    container_name: container-pg
    image: postgres
    hostname: localhost
    ports:
      - "15432:5432"
    profiles: [ local, prod ]
    env_file: /home/piotr/projects/ml-project/conf/env/env_local.sh
    volumes:
      - ./storage/postgres:/var/lib/postgresql/data:z
      - ../../../conf/env/postgres_init.sh:/docker-entrypoint-initdb.d/init-database.sh
    #restart: unless-stopped

  pgadmin:
    container_name: container-pgadmin
    image: dpage/pgadmin4
    depends_on:
      - postgres
    ports:
      - "15050:80"
    env_file: /home/piotr/projects/ml-project/conf/env/env_local.sh
    profiles: [ local ] 
    restart: unless-stopped

  mlflow:
    image: bitnami/mlflow #prefered to vendor's image because it supports sqlalchemy backends which makes use of postgresql possible
    depends_on:
      - postgres
    command: >
      /opt/bitnami/python/bin/mlflow server --host 0.0.0.0 --port 5000 
      --backend-store-uri postgresql://${MLFLOW_DB_USER}:${MLFLOW_DB_PASSWORD}@postgres/mlflow 
      --default-artifact-root mlflow-artifacts:/ --artifacts-destination s3://mlflow --serve-artifacts
    env_file: /home/piotr/projects/ml-project/conf/env/env_local.sh
    ports:
      - "15000:5000"
    volumes:
      - ./storage/mlflow:/app
    profiles: [ local, prod ]
    working_dir: /app

  optuna-dashboard:
    image: ghcr.io/optuna/optuna-dashboard
    entrypoint: ["sh","-c","/usr/local/bin/python -c \"import optuna; optuna.storages.RDBStorage('postgresql+psycopg2://${OPTUNA_DB_USER}:${OPTUNA_DB_PASSWORD}@postgres/optuna')\" && /usr/local/bin/optuna-dashboard --port 8080 --host 0.0.0.0 --server gunicorn postgresql://${OPTUNA_DB_USER}:${OPTUNA_DB_PASSWORD}@postgres/optuna"] #https://github.com/optuna/optuna/issues/3999
    env_file: /home/piotr/projects/ml-project/conf/env/env_local.sh
    depends_on:
      - postgres
    ports:
      - "18080:8080"
    profiles: [ local ]
    volumes:
      - ./storage/optuna:/app